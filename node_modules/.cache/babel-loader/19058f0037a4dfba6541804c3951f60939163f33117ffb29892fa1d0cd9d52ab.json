{"ast":null,"code":"var _jsxFileName = \"/home/juan/springboard/React-Space-Travel/space-travel/src/pages/Planets/Planets.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useContext } from \"react\";\nimport styles from \"./Planets.module.css\";\nimport { LoadingContext } from \"../../context/LoadingProvider\";\nimport SpaceTravelApi from \"../../services/SpaceTravelApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Planets() {\n  _s();\n  const [planetsWithSpacecrafts, setPlanetsWithSpacecrafts] = useState([]);\n  const {\n    isLoading,\n    enableLoading,\n    disableLoading\n  } = useContext(LoadingContext);\n  const [selectedPlanetId, setSelectedPlanetId] = useState();\n  const [selectedSpacecraftId, setSelectedSpacecraftId] = useState();\n  async function getPlanetsWithSpacecrafts() {\n    const {\n      data: planets,\n      isError: isErrorPlanets\n    } = await SpaceTravelApi.getPlanets();\n    const {\n      data: spacecrafts,\n      isError: isErrorSpacecrafts\n    } = await SpaceTravelApi.getSpacecrafts();\n    if (!isErrorPlanets && !isErrorSpacecrafts) {\n      // todo fill planets.spacecrafts with spacecrafts\n      for (const planet of planets) {\n        planet.spacecrafts = [];\n        for (const spacecraft of spacecrafts) {\n          if (planet.id === spacecraft.currentLocation) {\n            planet.spacecrafts.push(spacecraft);\n          }\n        }\n      }\n      setPlanetsWithSpacecrafts(planets);\n    }\n  }\n  useEffect(() => {\n    async function runGetPlanetsWithSpacecrafts() {\n      enableLoading();\n      await getPlanetsWithSpacecrafts();\n      disableLoading();\n    }\n    runGetPlanetsWithSpacecrafts();\n  }, [enableLoading, disableLoading]);\n  function handleClickOfPlanet(event, id) {\n    // todo set the selected planet\n    if (!isLoading) {\n      setSelectedPlanetId(id);\n    }\n  }\n  async function handleClickOfSpacecraft(event, spacecraftId, planetId) {\n    // todo set the selected spacecraft\n    // todo send spacecraft to planet using the API\n    // todo call getPlanetsWithSpacecrafts to refresh the page content\n    if (!isLoading && Number.isInteger(selectedPlanetId) && selectedPlanetId !== planetId) {\n      setSelectedSpacecraftId(spacecraftId);\n      enableLoading();\n      const {\n        isError\n      } = await SpaceTravelApi.sendSpacecraftToPlanet({\n        spacecraftId,\n        targetPlanetId: selectedPlanetId\n      });\n      if (!isError) {\n        await getPlanetsWithSpacecrafts();\n        setSelectedPlanetId(null);\n        setSelectedSpacecraftId(null);\n      }\n      disableLoading();\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: planetsWithSpacecrafts.map((planet, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"planetWithSpacecrafts\"],\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles[\"planet\"]} ${selectedPlanetId === planet.id && styles[\"planet--selected\"]}`,\n        onClick: event => handleClickOfPlanet(event, planet.id),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles[\"planet__imageContainer\"],\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: planet.pictureUrl,\n            alt: `The planet ${planet.name}`,\n            className: styles[\"planet__image\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles[\"planet__info\"],\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: planet.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: planet.currentPopulation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"planet__spacecrafts\"],\n        children: planet.spacecrafts.map((spacecraft, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${styles[\"planet__spacecraft\"]} ${selectedSpacecraftId === spacecraft.id && styles[\"planet__spacecraft--selected\"]}`,\n          onClick: event => handleClickOfSpacecraft(event, spacecraft.id, planet.id),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles[\"planet__spacecraft__imageContainer\"],\n            children: spacecraft.pictureUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: spacecraft.pictureUrl,\n              alt: `The spacecraft ${spacecraft.name}`,\n              className: styles[\"planet__spacecraft__image\"]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 50\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles[\"planet__spacecraft__image--default\"],\n              children: \"\\uD83D\\uDE80\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 50\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 46\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"planet__spacecraft__info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: spacecraft.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 48\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: spacecraft.capacity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 48\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 46\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 44\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this))\n  }, void 0, false);\n}\n_s(Planets, \"lkBGl5hVc/3YVbuZTm7f1/1UXRE=\");\n_c = Planets;\nexport default Planets;\nvar _c;\n$RefreshReg$(_c, \"Planets\");","map":{"version":3,"names":["useState","useEffect","useContext","styles","LoadingContext","SpaceTravelApi","jsxDEV","_jsxDEV","Fragment","_Fragment","Planets","_s","planetsWithSpacecrafts","setPlanetsWithSpacecrafts","isLoading","enableLoading","disableLoading","selectedPlanetId","setSelectedPlanetId","selectedSpacecraftId","setSelectedSpacecraftId","getPlanetsWithSpacecrafts","data","planets","isError","isErrorPlanets","getPlanets","spacecrafts","isErrorSpacecrafts","getSpacecrafts","planet","spacecraft","id","currentLocation","push","runGetPlanetsWithSpacecrafts","handleClickOfPlanet","event","handleClickOfSpacecraft","spacecraftId","planetId","Number","isInteger","sendSpacecraftToPlanet","targetPlanetId","children","map","index","className","onClick","src","pictureUrl","alt","name","fileName","_jsxFileName","lineNumber","columnNumber","currentPopulation","capacity","_c","$RefreshReg$"],"sources":["/home/juan/springboard/React-Space-Travel/space-travel/src/pages/Planets/Planets.js"],"sourcesContent":["import {useState, useEffect, useContext} from \"react\";\n\nimport styles from \"./Planets.module.css\";\nimport {LoadingContext} from \"../../context/LoadingProvider\";\nimport SpaceTravelApi from \"../../services/SpaceTravelApi\";\n\nfunction Planets ()\n{\n  const [planetsWithSpacecrafts, setPlanetsWithSpacecrafts] = useState([]);\n  const {isLoading, enableLoading, disableLoading} = useContext(LoadingContext);\n  const [selectedPlanetId, setSelectedPlanetId] = useState();\n  const [selectedSpacecraftId, setSelectedSpacecraftId] = useState();\n\n  async function getPlanetsWithSpacecrafts ()\n  {\n    const {data: planets, isError: isErrorPlanets} = await SpaceTravelApi.getPlanets();\n    const {data: spacecrafts, isError: isErrorSpacecrafts} = await SpaceTravelApi.getSpacecrafts();\n\n    if (!isErrorPlanets && !isErrorSpacecrafts)\n    {\n      // todo fill planets.spacecrafts with spacecrafts\n      for (const planet of planets)\n      {\n        planet.spacecrafts = [];\n\n        for (const spacecraft of spacecrafts)\n        {\n          if (planet.id === spacecraft.currentLocation)\n          {\n            planet.spacecrafts.push(spacecraft);\n          }\n        }\n      }\n\n      setPlanetsWithSpacecrafts(planets);\n    }\n  }\n\n  useEffect(() =>\n            {\n              async function runGetPlanetsWithSpacecrafts ()\n              {\n                enableLoading();\n                await getPlanetsWithSpacecrafts();\n                disableLoading();\n              }\n\n              runGetPlanetsWithSpacecrafts();\n            },\n            [enableLoading, disableLoading]\n  );\n\n  function handleClickOfPlanet (event, id)\n  {\n    // todo set the selected planet\n    if (!isLoading)\n    {\n      setSelectedPlanetId(id);\n    }\n  }\n\n  async function handleClickOfSpacecraft (event, spacecraftId, planetId)\n  {\n    // todo set the selected spacecraft\n    // todo send spacecraft to planet using the API\n    // todo call getPlanetsWithSpacecrafts to refresh the page content\n    if (!isLoading && Number.isInteger(selectedPlanetId) && selectedPlanetId !== planetId)\n    {\n      setSelectedSpacecraftId(spacecraftId);\n\n      enableLoading();\n\n      const {isError} = await SpaceTravelApi.sendSpacecraftToPlanet({spacecraftId, targetPlanetId: selectedPlanetId});\n      if (!isError)\n      {\n        await getPlanetsWithSpacecrafts();\n        setSelectedPlanetId(null);\n        setSelectedSpacecraftId(null);\n      }\n\n      disableLoading();\n    }\n  }\n\n  return (\n    <>\n      {\n        planetsWithSpacecrafts.map(\n          (planet, index) =>\n            <div\n              key={index}\n              className={styles[\"planetWithSpacecrafts\"]}\n            >\n              <div\n                className={`${styles[\"planet\"]} ${selectedPlanetId === planet.id && styles[\"planet--selected\"]}`}\n                onClick={(event) => handleClickOfPlanet(event, planet.id)}\n              >\n                <div className={styles[\"planet__imageContainer\"]}>\n                  <img\n                    src={planet.pictureUrl}\n                    alt={`The planet ${planet.name}`}\n                    className={styles[\"planet__image\"]}\n                  />\n                </div>\n\n                <div className={styles[\"planet__info\"]}>\n                  <div>{planet.name}</div>\n                  <div>{planet.currentPopulation}</div>\n                </div>\n              </div>\n\n              <div className={styles[\"planet__spacecrafts\"]}>\n                {\n                  planet.spacecrafts.map((spacecraft, index) =>\n                                           <div\n                                             key={index}\n                                             className={`${styles[\"planet__spacecraft\"]} ${selectedSpacecraftId === spacecraft.id && styles[\"planet__spacecraft--selected\"]}`}\n                                             onClick={(event) => handleClickOfSpacecraft(event, spacecraft.id, planet.id)}\n                                           >\n                                             <div className={styles[\"planet__spacecraft__imageContainer\"]}>\n                                               {\n                                                 spacecraft.pictureUrl\n                                                 ?\n                                                 <img\n                                                   src={spacecraft.pictureUrl}\n                                                   alt={`The spacecraft ${spacecraft.name}`}\n                                                   className={styles[\"planet__spacecraft__image\"]}\n                                                 />\n                                                 :\n                                                 <span className={styles[\"planet__spacecraft__image--default\"]}>🚀</span>\n                                               }\n\n                                             </div>\n                                             <div className={\"planet__spacecraft__info\"}>\n                                               <div>{spacecraft.name}</div>\n                                               <div>{spacecraft.capacity}</div>\n                                             </div>\n                                           </div>\n                  )\n                }\n              </div>\n            </div>\n        )\n      }\n    </>\n  );\n}\n\nexport default Planets;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}